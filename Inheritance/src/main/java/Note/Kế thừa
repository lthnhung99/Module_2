Kế thừa là cơ chế cho phép một lớp Con sử dụng lại các đặc điểm và
hành vi đã được định nghĩa trong lớp Cha
• Từ khoá extends được sử dụng để kế thừa mộtlớp
• Cú pháp:
class SubClass extends SupperClass
{
//Class body
}
Trong đó:
• SubClass là tên của lớp con
• SupperClass là tên của lớp cha
Từ khoá super được sử dụng ở lớp con để gọi đến constructor hoặc
phương thức của lớp cha

• Method Overriding (ghi đè phương thức) là cơ chế cho phép lớp con
định nghĩa lại các phương thức đã được định nghĩa trước đó ở lớp
cha
• Phương thức override ở lớp con có cùng tên,cùng danh sách tham
số và kiểu dữ liệu trả về so với phương thức ở lớp cha
• Phương thức ở lớp con phải có access modifier có level bằng hoặc
cao hơn so với phương thức ở lớp cha
• Từ khoá override được sử dụng để ghi đè phương thức
• @Override có thể được sử dụng để đánh dấu phương thức ghi đè

Lớp Object và phương thức toString()
• Lớp Object là lớp gốc của tất cả các lớp trong Java
• Tất cả các lớp trong Java đều kế thừa từ lớp Object
• Lớp Object có một phương thức được sử dụng thông dụng đó là
toString():Trả về một chuỗi mô tả đối tượng
• Mô tả của phương thức toString() là:
public String toString()
• Ví dụ:
System.out.println(circle.toString());

Override phương thức toString()
• Các lớp có thể ghi đè phương thức toString()để mô tả đối tượng tốt
hơn

Từ khoá final
• Từ khoá final áp dụng cho lớp và phương thức để ngăn ngừa việc kế
thừa và ghi đè phương thức
• Ví dụ:
public final class Animal{
}
public class Circle{
public final void display(){
}
}
Đa hình
• Polymorphism(Đa hình) là cơ chế cho phép một biến thuộc kiểu dữ
liệu cha có thể trỏ đến một đối tượng thuộc lớp con
• Khi khai báo một lớp,đồng nghĩa với tạo ra một kiểu dữ liệu mới
• Khi một lớp con kế thừa lớp cha thì kiểu dữ liệu của lớp cha được gọi
là supertype, kiểu dữ liệu của lớp con được gọi là subtype
• Vídụ:Geometric là supertype của Circle,và Circle là subtype của
Geometric.Tất cả các đối tượng của lớp Circle đều là Geometric,
nhưng không phải ngược lại.
• Tính đa hình,cho phép khai báo sau:
Geometric geometricObj = new Circle(1);


Toán tử instanceof giúp kiểm tra kiểu của một đối tượng
• Giá trị trả về có kiểu boolean
*object instanceof Class
 object là đối tượng cần kiểm tra và
 Class là lớp mà chúng ta muốn kiểm tra xem đối tượng
 có phải là thể hiện của lớp đó hay không